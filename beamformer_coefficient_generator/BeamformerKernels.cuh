#ifndef __BERAMFORMER_KERNELS_CUH__
#define __BERAMFORMER_KERNELS_CUH__

#include <cuda.h>
#include <cuda_runtime_api.h>

/** \brief Kernel that implements a naive version of beamformer steering coefficient generation
 *  
 *  This kernel only operates in a single instance in time. It also assigns a single thread per channel-antenna-beam steering 
 *  coefficient. This results in more accesses to the psDelayValues struct than is necessary. It is thus heavily IO bound and
 *  significant optomisation must still take place. It must be seen as a first naive attempt. It does not consider a changing 
 *  time index. In order to handle changing time indeces, the output array must be manually offset, and the cCurrentTime struct
 *  changed accordingly 
 *  
 *  Input Delay Value Ordering:
 *  This kernel expects the input delay values to be ordered by [channel][antenna][beam] with beam being the fastest changing
 *  index
 * 
 *  Output Complex Steering Coefficients Ordering
 *  This kernel expects the output steering coefficients to be ordered by [channel][antenna][beam] with beam being the fastest
 *  changing index
 * 
 *  Calculating Block and Grid Dimensions:
 *  The block size is set to NUM_THREADS_PER_BLOCK and the grid is two dimensional. There are three parameters to be considered
 *  when setting the dimensions NR_STATIONS,NR_CHANNELS and NR_BEAMS that form a 3 dimensional array of complex beamweights. The
 *  inner two dimensions of this array are stations and beams. These are treated as a single dimension. Ideally they would be a 
 *  single block of NR_STATIONS*NR_BEAMS threads. However this goes above the NUM_THREADS_PER_BLOCK constant and as such the 
 *  NR_STATIONS*NR_BEAMS treads needs to be distributed over a number of blocks. As such the x grid dimension is set to 
 *  ceil(NR_STATIONS*NR_BEAMS/NUM_THREADS_PER_BLOCK). The y grid dimension is NR_CHANNELS. 
 *  The function \ref generate_GPU_kernel_dimensions() implements the logic outlined above.   
 *  
 *  \param[in]  cCurrentTime        Pointer to struct containing the current time to generate steering coefficients for
 *  \param[in]  cRefTime            Pointer to struct containinf the reference time that the delay values are made with reference to
 *  \param[in]  psDelayValues       Pointer to the location in memory of the delay values to be used to to generate the coefficients.
 *  \param[out] pfCplxBeamweights   Pointer to the location in memory to store the complex beamweights generated by the the kernel
 */
__global__ void calculate_beamweights_naive(
                                struct timespec sCurrentTime, 
                                struct timespec sRefTime,
                                struct delay_vals *psDelayVals, 
                                float* pfCplxSteeringCoeffs);

__global__ void calculate_beamweights_grouped_channels(
                                struct timespec sCurrentTime, 
                                struct timespec sRefTime,
                                struct delay_vals *psDelayVals, 
                                float* pfCplxSteeringCoeffs);

__global__ void calculate_beamweights_grouped_channels_and_timestamps(
                                struct timespec sRefTime,
                                struct delay_vals *psDelayVals, 
                                float* pfCplxSteeringCoeffs,
                                bool b16BitOutput);

__global__ void calculate_beamweights_and_beamform_single_channel(
                                struct timespec sRefTime,
                                struct delay_vals *psDelayVals, 
                                float* pfBeams,
                                int8_t * pi8AntennaData);

#endif